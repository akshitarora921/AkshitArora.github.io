(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/**
 * The code was extracted from:
 * https://github.com/davidchambers/Base64.js
 */

var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

function InvalidCharacterError(message) {
  this.message = message;
}

InvalidCharacterError.prototype = new Error();
InvalidCharacterError.prototype.name = 'InvalidCharacterError';

function polyfill (input) {
  var str = String(input).replace(/=+$/, '');
  if (str.length % 4 == 1) {
    throw new InvalidCharacterError("'atob' failed: The string to be decoded is not correctly encoded.");
  }
  for (
    // initialize result and counters
    var bc = 0, bs, buffer, idx = 0, output = '';
    // get next character
    buffer = str.charAt(idx++);
    // character found in table? initialize bit storage and add its ascii value;
    ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,
      // and if not first of each 4 characters,
      // convert the first 8 bits to one ascii character
      bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0
  ) {
    // try to find character in table (0-63, not found => -1)
    buffer = chars.indexOf(buffer);
  }
  return output;
}


module.exports = typeof window !== 'undefined' && window.atob && window.atob.bind(window) || polyfill;

},{}],2:[function(require,module,exports){
var atob = require('./atob');

function b64DecodeUnicode(str) {
  return decodeURIComponent(atob(str).replace(/(.)/g, function (m, p) {
    var code = p.charCodeAt(0).toString(16).toUpperCase();
    if (code.length < 2) {
      code = '0' + code;
    }
    return '%' + code;
  }));
}

module.exports = function(str) {
  var output = str.replace(/-/g, "+").replace(/_/g, "/");
  switch (output.length % 4) {
    case 0:
      break;
    case 2:
      output += "==";
      break;
    case 3:
      output += "=";
      break;
    default:
      throw "Illegal base64url string!";
  }

  try{
    return b64DecodeUnicode(output);
  } catch (err) {
    return atob(output);
  }
};

},{"./atob":1}],3:[function(require,module,exports){
'use strict';

var base64_url_decode = require('./base64_url_decode');

function InvalidTokenError(message) {
  this.message = message;
}

InvalidTokenError.prototype = new Error();
InvalidTokenError.prototype.name = 'InvalidTokenError';

module.exports = function (token,options) {
  if (typeof token !== 'string') {
    throw new InvalidTokenError('Invalid token specified');
  }

  options = options || {};
  var pos = options.header === true ? 0 : 1;
  try {
    return JSON.parse(base64_url_decode(token.split('.')[pos]));
  } catch (e) {
    throw new InvalidTokenError('Invalid token specified: ' + e.message);
  }
};

module.exports.InvalidTokenError = InvalidTokenError;

},{"./base64_url_decode":2}],4:[function(require,module,exports){
/*! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. Dual MIT/BSD license */

window.matchMedia || (window.matchMedia = function() {
    "use strict";

    // For browsers that support matchMedium api such as IE 9 and webkit
    var styleMedia = (window.styleMedia || window.media);

    // For those that don't support matchMedium
    if (!styleMedia) {
        var style       = document.createElement('style'),
            script      = document.getElementsByTagName('script')[0],
            info        = null;

        style.type  = 'text/css';
        style.id    = 'matchmediajs-test';

        script.parentNode.insertBefore(style, script);

        // 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers
        info = ('getComputedStyle' in window) && window.getComputedStyle(style, null) || style.currentStyle;

        styleMedia = {
            matchMedium: function(media) {
                var text = '@media ' + media + '{ #matchmediajs-test { width: 1px; } }';

                // 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers
                if (style.styleSheet) {
                    style.styleSheet.cssText = text;
                } else {
                    style.textContent = text;
                }

                // Test if media query is true or false
                return info.width === '1px';
            }
        };
    }

    return function(media) {
        return {
            matches: styleMedia.matchMedium(media || 'all'),
            media: media || 'all'
        };
    };
}());

},{}],5:[function(require,module,exports){
/**
 * UAParser.js v0.7.17
 * Lightweight JavaScript-based User-Agent string parser
 * https://github.com/faisalman/ua-parser-js
 *
 * Copyright Â© 2012-2016 Faisal Salman <fyzlman@gmail.com>
 * Dual licensed under GPLv2 & MIT
 */

(function (window, undefined) {

    'use strict';

    //////////////
    // Constants
    /////////////


    var LIBVERSION  = '0.7.17',
        EMPTY       = '',
        UNKNOWN     = '?',
        FUNC_TYPE   = 'function',
        UNDEF_TYPE  = 'undefined',
        OBJ_TYPE    = 'object',
        STR_TYPE    = 'string',
        MAJOR       = 'major', // deprecated
        MODEL       = 'model',
        NAME        = 'name',
        TYPE        = 'type',
        VENDOR      = 'vendor',
        VERSION     = 'version',
        ARCHITECTURE= 'architecture',
        CONSOLE     = 'console',
        MOBILE      = 'mobile',
        TABLET      = 'tablet',
        SMARTTV     = 'smarttv',
        WEARABLE    = 'wearable',
        EMBEDDED    = 'embedded';


    ///////////
    // Helper
    //////////


    var util = {
        extend : function (regexes, extensions) {
            var margedRegexes = {};
            for (var i in regexes) {
                if (extensions[i] && extensions[i].length % 2 === 0) {
                    margedRegexes[i] = extensions[i].concat(regexes[i]);
                } else {
                    margedRegexes[i] = regexes[i];
                }
            }
            return margedRegexes;
        },
        has : function (str1, str2) {
          if (typeof str1 === "string") {
            return str2.toLowerCase().indexOf(str1.toLowerCase()) !== -1;
          } else {
            return false;
          }
        },
        lowerize : function (str) {
            return str.toLowerCase();
        },
        major : function (version) {
            return typeof(version) === STR_TYPE ? version.replace(/[^\d\.]/g,'').split(".")[0] : undefined;
        },
        trim : function (str) {
          return str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');
        }
    };


    ///////////////
    // Map helper
    //////////////


    var mapper = {

        rgx : function (ua, arrays) {

            //var result = {},
            var i = 0, j, k, p, q, matches, match;//, args = arguments;

            /*// construct object barebones
            for (p = 0; p < args[1].length; p++) {
                q = args[1][p];
                result[typeof q === OBJ_TYPE ? q[0] : q] = undefined;
            }*/

            // loop through all regexes maps
            while (i < arrays.length && !matches) {

                var regex = arrays[i],       // even sequence (0,2,4,..)
                    props = arrays[i + 1];   // odd sequence (1,3,5,..)
                j = k = 0;

                // try matching uastring with regexes
                while (j < regex.length && !matches) {

                    matches = regex[j++].exec(ua);

                    if (!!matches) {
                        for (p = 0; p < props.length; p++) {
                            match = matches[++k];
                            q = props[p];
                            // check if given property is actually array
                            if (typeof q === OBJ_TYPE && q.length > 0) {
                                if (q.length == 2) {
                                    if (typeof q[1] == FUNC_TYPE) {
                                        // assign modified match
                                        this[q[0]] = q[1].call(this, match);
                                    } else {
                                        // assign given value, ignore regex match
                                        this[q[0]] = q[1];
                                    }
                                } else if (q.length == 3) {
                                    // check whether function or regex
                                    if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) {
                                        // call function (usually string mapper)
                                        this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;
                                    } else {
                                        // sanitize match using given regex
                                        this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;
                                    }
                                } else if (q.length == 4) {
                                        this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;
                                }
                            } else {
                                this[q] = match ? match : undefined;
                            }
                        }
                    }
                }
                i += 2;
            }
            // console.log(this);
            //return this;
        },

        str : function (str, map) {

            for (var i in map) {
                // check if array
                if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {
                    for (var j = 0; j < map[i].length; j++) {
                        if (util.has(map[i][j], str)) {
                            return (i === UNKNOWN) ? undefined : i;
                        }
                    }
                } else if (util.has(map[i], str)) {
                    return (i === UNKNOWN) ? undefined : i;
                }
            }
            return str;
        }
    };


    ///////////////
    // String map
    //////////////


    var maps = {

        browser : {
            oldsafari : {
                version : {
                    '1.0'   : '/8',
                    '1.2'   : '/1',
                    '1.3'   : '/3',
                    '2.0'   : '/412',
                    '2.0.2' : '/416',
                    '2.0.3' : '/417',
                    '2.0.4' : '/419',
                    '?'     : '/'
                }
            }
        },

        device : {
            amazon : {
                model : {
                    'Fire Phone' : ['SD', 'KF']
                }
            },
            sprint : {
                model : {
                    'Evo Shift 4G' : '7373KT'
                },
                vendor : {
                    'HTC'       : 'APA',
                    'Sprint'    : 'Sprint'
                }
            }
        },

        os : {
            windows : {
                version : {
                    'ME'        : '4.90',
                    'NT 3.11'   : 'NT3.51',
                    'NT 4.0'    : 'NT4.0',
                    '2000'      : 'NT 5.0',
                    'XP'        : ['NT 5.1', 'NT 5.2'],
                    'Vista'     : 'NT 6.0',
                    '7'         : 'NT 6.1',
                    '8'         : 'NT 6.2',
                    '8.1'       : 'NT 6.3',
                    '10'        : ['NT 6.4', 'NT 10.0'],
                    'RT'        : 'ARM'
                }
            }
        }
    };


    //////////////
    // Regex map
    /////////////


    var regexes = {

        browser : [[

            // Presto based
            /(opera\smini)\/([\w\.-]+)/i,                                       // Opera Mini
            /(opera\s[mobiletab]+).+version\/([\w\.-]+)/i,                      // Opera Mobi/Tablet
            /(opera).+version\/([\w\.]+)/i,                                     // Opera > 9.80
            /(opera)[\/\s]+([\w\.]+)/i                                          // Opera < 9.80
            ], [NAME, VERSION], [

            /(opios)[\/\s]+([\w\.]+)/i                                          // Opera mini on iphone >= 8.0
            ], [[NAME, 'Opera Mini'], VERSION], [

            /\s(opr)\/([\w\.]+)/i                                               // Opera Webkit
            ], [[NAME, 'Opera'], VERSION], [

            // Mixed
            /(kindle)\/([\w\.]+)/i,                                             // Kindle
            /(lunascape|maxthon|netfront|jasmine|blazer)[\/\s]?([\w\.]+)*/i,
                                                                                // Lunascape/Maxthon/Netfront/Jasmine/Blazer

            // Trident based
            /(avant\s|iemobile|slim|baidu)(?:browser)?[\/\s]?([\w\.]*)/i,
                                                                                // Avant/IEMobile/SlimBrowser/Baidu
            /(?:ms|\()(ie)\s([\w\.]+)/i,                                        // Internet Explorer

            // Webkit/KHTML based
            /(rekonq)\/([\w\.]+)*/i,                                            // Rekonq
            /(chromium|flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser)\/([\w\.-]+)/i
                                                                                // Chromium/Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser
            ], [NAME, VERSION], [

            /(trident).+rv[:\s]([\w\.]+).+like\sgecko/i                         // IE11
            ], [[NAME, 'IE'], VERSION], [

            /(edge)\/((\d+)?[\w\.]+)/i                                          // Microsoft Edge
            ], [NAME, VERSION], [

            /(yabrowser)\/([\w\.]+)/i                                           // Yandex
            ], [[NAME, 'Yandex'], VERSION], [

            /(puffin)\/([\w\.]+)/i                                              // Puffin
            ], [[NAME, 'Puffin'], VERSION], [

            /((?:[\s\/])uc?\s?browser|(?:juc.+)ucweb)[\/\s]?([\w\.]+)/i
                                                                                // UCBrowser
            ], [[NAME, 'UCBrowser'], VERSION], [

            /(comodo_dragon)\/([\w\.]+)/i                                       // Comodo Dragon
            ], [[NAME, /_/g, ' '], VERSION], [

            /(micromessenger)\/([\w\.]+)/i                                      // WeChat
            ], [[NAME, 'WeChat'], VERSION], [

            /(QQ)\/([\d\.]+)/i                                                  // QQ, aka ShouQ
            ], [NAME, VERSION], [

            /m?(qqbrowser)[\/\s]?([\w\.]+)/i                                    // QQBrowser
            ], [NAME, VERSION], [

            /xiaomi\/miuibrowser\/([\w\.]+)/i                                   // MIUI Browser
            ], [VERSION, [NAME, 'MIUI Browser']], [

            /;fbav\/([\w\.]+);/i                                                // Facebook App for iOS & Android
            ], [VERSION, [NAME, 'Facebook']], [

            /headlesschrome(?:\/([\w\.]+)|\s)/i                                 // Chrome Headless
            ], [VERSION, [NAME, 'Chrome Headless']], [

            /\swv\).+(chrome)\/([\w\.]+)/i                                      // Chrome WebView
            ], [[NAME, /(.+)/, '$1 WebView'], VERSION], [

            /((?:oculus|samsung)browser)\/([\w\.]+)/i
            ], [[NAME, /(.+(?:g|us))(.+)/, '$1 $2'], VERSION], [                // Oculus / Samsung Browser

            /android.+version\/([\w\.]+)\s+(?:mobile\s?safari|safari)*/i        // Android Browser
            ], [VERSION, [NAME, 'Android Browser']], [

            /(chrome|omniweb|arora|[tizenoka]{5}\s?browser)\/v?([\w\.]+)/i
                                                                                // Chrome/OmniWeb/Arora/Tizen/Nokia
            ], [NAME, VERSION], [

            /(dolfin)\/([\w\.]+)/i                                              // Dolphin
            ], [[NAME, 'Dolphin'], VERSION], [

            /((?:android.+)crmo|crios)\/([\w\.]+)/i                             // Chrome for Android/iOS
            ], [[NAME, 'Chrome'], VERSION], [

            /(coast)\/([\w\.]+)/i                                               // Opera Coast
            ], [[NAME, 'Opera Coast'], VERSION], [

            /fxios\/([\w\.-]+)/i                                                // Firefox for iOS
            ], [VERSION, [NAME, 'Firefox']], [

            /version\/([\w\.]+).+?mobile\/\w+\s(safari)/i                       // Mobile Safari
            ], [VERSION, [NAME, 'Mobile Safari']], [

            /version\/([\w\.]+).+?(mobile\s?safari|safari)/i                    // Safari & Safari Mobile
            ], [VERSION, NAME], [

            /webkit.+?(gsa)\/([\w\.]+).+?(mobile\s?safari|safari)(\/[\w\.]+)/i  // Google Search Appliance on iOS
            ], [[NAME, 'GSA'], VERSION], [

            /webkit.+?(mobile\s?safari|safari)(\/[\w\.]+)/i                     // Safari < 3.0
            ], [NAME, [VERSION, mapper.str, maps.browser.oldsafari.version]], [

            /(konqueror)\/([\w\.]+)/i,                                          // Konqueror
            /(webkit|khtml)\/([\w\.]+)/i
            ], [NAME, VERSION], [

            // Gecko based
            /(navigator|netscape)\/([\w\.-]+)/i                                 // Netscape
            ], [[NAME, 'Netscape'], VERSION], [
            /(swiftfox)/i,                                                      // Swiftfox
            /(icedragon|iceweasel|camino|chimera|fennec|maemo\sbrowser|minimo|conkeror)[\/\s]?([\w\.\+]+)/i,
                                                                                // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror
            /(firefox|seamonkey|k-meleon|icecat|iceape|firebird|phoenix)\/([\w\.-]+)/i,
                                                                                // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix
            /(mozilla)\/([\w\.]+).+rv\:.+gecko\/\d+/i,                          // Mozilla

            // Other
            /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir)[\/\s]?([\w\.]+)/i,
                                                                                // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Sleipnir
            /(links)\s\(([\w\.]+)/i,                                            // Links
            /(gobrowser)\/?([\w\.]+)*/i,                                        // GoBrowser
            /(ice\s?browser)\/v?([\w\._]+)/i,                                   // ICE Browser
            /(mosaic)[\/\s]([\w\.]+)/i                                          // Mosaic
            ], [NAME, VERSION]

            /* /////////////////////
            // Media players BEGIN
            ////////////////////////

            , [

            /(apple(?:coremedia|))\/((\d+)[\w\._]+)/i,                          // Generic Apple CoreMedia
            /(coremedia) v((\d+)[\w\._]+)/i
            ], [NAME, VERSION], [

            /(aqualung|lyssna|bsplayer)\/((\d+)?[\w\.-]+)/i                     // Aqualung/Lyssna/BSPlayer
            ], [NAME, VERSION], [

            /(ares|ossproxy)\s((\d+)[\w\.-]+)/i                                 // Ares/OSSProxy
            ], [NAME, VERSION], [

            /(audacious|audimusicstream|amarok|bass|core|dalvik|gnomemplayer|music on console|nsplayer|psp-internetradioplayer|videos)\/((\d+)[\w\.-]+)/i,
                                                                                // Audacious/AudiMusicStream/Amarok/BASS/OpenCORE/Dalvik/GnomeMplayer/MoC
                                                                                // NSPlayer/PSP-InternetRadioPlayer/Videos
            /(clementine|music player daemon)\s((\d+)[\w\.-]+)/i,               // Clementine/MPD
            /(lg player|nexplayer)\s((\d+)[\d\.]+)/i,
            /player\/(nexplayer|lg player)\s((\d+)[\w\.-]+)/i                   // NexPlayer/LG Player
            ], [NAME, VERSION], [
            /(nexplayer)\s((\d+)[\w\.-]+)/i                                     // Nexplayer
            ], [NAME, VERSION], [

            /(flrp)\/((\d+)[\w\.-]+)/i                                          // Flip Player
            ], [[NAME, 'Flip Player'], VERSION], [

            /(fstream|nativehost|queryseekspider|ia-archiver|facebookexternalhit)/i
                                                                                // FStream/NativeHost/QuerySeekSpider/IA Archiver/facebookexternalhit
            ], [NAME], [

            /(gstreamer) souphttpsrc (?:\([^\)]+\)){0,1} libsoup\/((\d+)[\w\.-]+)/i
                                                                                // Gstreamer
            ], [NAME, VERSION], [

            /(htc streaming player)\s[\w_]+\s\/\s((\d+)[\d\.]+)/i,              // HTC Streaming Player
            /(java|python-urllib|python-requests|wget|libcurl)\/((\d+)[\w\.-_]+)/i,
                                                                                // Java/urllib/requests/wget/cURL
            /(lavf)((\d+)[\d\.]+)/i                                             // Lavf (FFMPEG)
            ], [NAME, VERSION], [

            /(htc_one_s)\/((\d+)[\d\.]+)/i                                      // HTC One S
            ], [[NAME, /_/g, ' '], VERSION], [

            /(mplayer)(?:\s|\/)(?:(?:sherpya-){0,1}svn)(?:-|\s)(r\d+(?:-\d+[\w\.-]+){0,1})/i
                                                                                // MPlayer SVN
            ], [NAME, VERSION], [

            /(mplayer)(?:\s|\/|[unkow-]+)((\d+)[\w\.-]+)/i                      // MPlayer
            ], [NAME, VERSION], [

            /(mplayer)/i,                                                       // MPlayer (no other info)
            /(yourmuze)/i,                                                      // YourMuze
            /(media player classic|nero showtime)/i                             // Media Player Classic/Nero ShowTime
            ], [NAME], [

            /(nero (?:home|scout))\/((\d+)[\w\.-]+)/i                           // Nero Home/Nero Scout
            ], [NAME, VERSION], [

            /(nokia\d+)\/((\d+)[\w\.-]+)/i                                      // Nokia
            ], [NAME, VERSION], [

            /\s(songbird)\/((\d+)[\w\.-]+)/i                                    // Songbird/Philips-Songbird
            ], [NAME, VERSION], [

            /(winamp)3 version ((\d+)[\w\.-]+)/i,                               // Winamp
            /(winamp)\s((\d+)[\w\.-]+)/i,
            /(winamp)mpeg\/((\d+)[\w\.-]+)/i
            ], [NAME, VERSION], [

            /(ocms-bot|tapinradio|tunein radio|unknown|winamp|inlight radio)/i  // OCMS-bot/tap in radio/tunein/unknown/winamp (no other info)
                                                                                // inlight radio
            ], [NAME], [

            /(quicktime|rma|radioapp|radioclientapplication|soundtap|totem|stagefright|streamium)\/((\d+)[\w\.-]+)/i
                                                                                // QuickTime/RealMedia/RadioApp/RadioClientApplication/
                                                                                // SoundTap/Totem/Stagefright/Streamium
            ], [NAME, VERSION], [

            /(smp)((\d+)[\d\.]+)/i                                              // SMP
            ], [NAME, VERSION], [

            /(vlc) media player - version ((\d+)[\w\.]+)/i,                     // VLC Videolan
            /(vlc)\/((\d+)[\w\.-]+)/i,
            /(xbmc|gvfs|xine|xmms|irapp)\/((\d+)[\w\.-]+)/i,                    // XBMC/gvfs/Xine/XMMS/irapp
            /(foobar2000)\/((\d+)[\d\.]+)/i,                                    // Foobar2000
            /(itunes)\/((\d+)[\d\.]+)/i                                         // iTunes
            ], [NAME, VERSION], [

            /(wmplayer)\/((\d+)[\w\.-]+)/i,                                     // Windows Media Player
            /(windows-media-player)\/((\d+)[\w\.-]+)/i
            ], [[NAME, /-/g, ' '], VERSION], [

            /windows\/((\d+)[\w\.-]+) upnp\/[\d\.]+ dlnadoc\/[\d\.]+ (home media server)/i
                                                                                // Windows Media Server
            ], [VERSION, [NAME, 'Windows']], [

            /(com\.riseupradioalarm)\/((\d+)[\d\.]*)/i                          // RiseUP Radio Alarm
            ], [NAME, VERSION], [

            /(rad.io)\s((\d+)[\d\.]+)/i,                                        // Rad.io
            /(radio.(?:de|at|fr))\s((\d+)[\d\.]+)/i
            ], [[NAME, 'rad.io'], VERSION]

            //////////////////////
            // Media players END
            ////////////////////*/

        ],

        cpu : [[

            /(?:(amd|x(?:(?:86|64)[_-])?|wow|win)64)[;\)]/i                     // AMD64
            ], [[ARCHITECTURE, 'amd64']], [

            /(ia32(?=;))/i                                                      // IA32 (quicktime)
            ], [[ARCHITECTURE, util.lowerize]], [

            /((?:i[346]|x)86)[;\)]/i                                            // IA32
            ], [[ARCHITECTURE, 'ia32']], [

            // PocketPC mistakenly identified as PowerPC
            /windows\s(ce|mobile);\sppc;/i
            ], [[ARCHITECTURE, 'arm']], [

            /((?:ppc|powerpc)(?:64)?)(?:\smac|;|\))/i                           // PowerPC
            ], [[ARCHITECTURE, /ower/, '', util.lowerize]], [

            /(sun4\w)[;\)]/i                                                    // SPARC
            ], [[ARCHITECTURE, 'sparc']], [

            /((?:avr32|ia64(?=;))|68k(?=\))|arm(?:64|(?=v\d+;))|(?=atmel\s)avr|(?:irix|mips|sparc)(?:64)?(?=;)|pa-risc)/i
                                                                                // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC
            ], [[ARCHITECTURE, util.lowerize]]
        ],

        device : [[

            /\((ipad|playbook);[\w\s\);-]+(rim|apple)/i                         // iPad/PlayBook
            ], [MODEL, VENDOR, [TYPE, TABLET]], [

            /applecoremedia\/[\w\.]+ \((ipad)/                                  // iPad
            ], [MODEL, [VENDOR, 'Apple'], [TYPE, TABLET]], [

            /(apple\s{0,1}tv)/i                                                 // Apple TV
            ], [[MODEL, 'Apple TV'], [VENDOR, 'Apple']], [

            /(archos)\s(gamepad2?)/i,                                           // Archos
            /(hp).+(touchpad)/i,                                                // HP TouchPad
            /(hp).+(tablet)/i,                                                  // HP Tablet
            /(kindle)\/([\w\.]+)/i,                                             // Kindle
            /\s(nook)[\w\s]+build\/(\w+)/i,                                     // Nook
            /(dell)\s(strea[kpr\s\d]*[\dko])/i                                  // Dell Streak
            ], [VENDOR, MODEL, [TYPE, TABLET]], [

            /(kf[A-z]+)\sbuild\/[\w\.]+.*silk\//i                               // Kindle Fire HD
            ], [MODEL, [VENDOR, 'Amazon'], [TYPE, TABLET]], [
            /(sd|kf)[0349hijorstuw]+\sbuild\/[\w\.]+.*silk\//i                  // Fire Phone
            ], [[MODEL, mapper.str, maps.device.amazon.model], [VENDOR, 'Amazon'], [TYPE, MOBILE]], [

            /\((ip[honed|\s\w*]+);.+(apple)/i                                   // iPod/iPhone
            ], [MODEL, VENDOR, [TYPE, MOBILE]], [
            /\((ip[honed|\s\w*]+);/i                                            // iPod/iPhone
            ], [MODEL, [VENDOR, 'Apple'], [TYPE, MOBILE]], [

            /(blackberry)[\s-]?(\w+)/i,                                         // BlackBerry
            /(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[\s_-]?([\w-]+)*/i,
                                                                                // BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron
            /(hp)\s([\w\s]+\w)/i,                                               // HP iPAQ
            /(asus)-?(\w+)/i                                                    // Asus
            ], [VENDOR, MODEL, [TYPE, MOBILE]], [
            /\(bb10;\s(\w+)/i                                                   // BlackBerry 10
            ], [MODEL, [VENDOR, 'BlackBerry'], [TYPE, MOBILE]], [
                                                                                // Asus Tablets
            /android.+(transfo[prime\s]{4,10}\s\w+|eeepc|slider\s\w+|nexus 7|padfone)/i
            ], [MODEL, [VENDOR, 'Asus'], [TYPE, TABLET]], [

            /(sony)\s(tablet\s[ps])\sbuild\//i,                                  // Sony
            /(sony)?(?:sgp.+)\sbuild\//i
            ], [[VENDOR, 'Sony'], [MODEL, 'Xperia Tablet'], [TYPE, TABLET]], [
            /android.+\s([c-g]\d{4}|so[-l]\w+)\sbuild\//i
            ], [MODEL, [VENDOR, 'Sony'], [TYPE, MOBILE]], [

            /\s(ouya)\s/i,                                                      // Ouya
            /(nintendo)\s([wids3u]+)/i                                          // Nintendo
            ], [VENDOR, MODEL, [TYPE, CONSOLE]], [

            /android.+;\s(shield)\sbuild/i                                      // Nvidia
            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, CONSOLE]], [

            /(playstation\s[34portablevi]+)/i                                   // Playstation
            ], [MODEL, [VENDOR, 'Sony'], [TYPE, CONSOLE]], [

            /(sprint\s(\w+))/i                                                  // Sprint Phones
            ], [[VENDOR, mapper.str, maps.device.sprint.vendor], [MODEL, mapper.str, maps.device.sprint.model], [TYPE, MOBILE]], [

            /(lenovo)\s?(S(?:5000|6000)+(?:[-][\w+]))/i                         // Lenovo tablets
            ], [VENDOR, MODEL, [TYPE, TABLET]], [

            /(htc)[;_\s-]+([\w\s]+(?=\))|\w+)*/i,                               // HTC
            /(zte)-(\w+)*/i,                                                    // ZTE
            /(alcatel|geeksphone|lenovo|nexian|panasonic|(?=;\s)sony)[_\s-]?([\w-]+)*/i
                                                                                // Alcatel/GeeksPhone/Lenovo/Nexian/Panasonic/Sony
            ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [

            /(nexus\s9)/i                                                       // HTC Nexus 9
            ], [MODEL, [VENDOR, 'HTC'], [TYPE, TABLET]], [

            /d\/huawei([\w\s-]+)[;\)]/i,
            /(nexus\s6p)/i                                                      // Huawei
            ], [MODEL, [VENDOR, 'Huawei'], [TYPE, MOBILE]], [

            /(microsoft);\s(lumia[\s\w]+)/i                                     // Microsoft Lumia
            ], [VENDOR, MODEL, [TYPE, MOBILE]], [

            /[\s\(;](xbox(?:\sone)?)[\s\);]/i                                   // Microsoft Xbox
            ], [MODEL, [VENDOR, 'Microsoft'], [TYPE, CONSOLE]], [
            /(kin\.[onetw]{3})/i                                                // Microsoft Kin
            ], [[MODEL, /\./g, ' '], [VENDOR, 'Microsoft'], [TYPE, MOBILE]], [

                                                                                // Motorola
            /\s(milestone|droid(?:[2-4x]|\s(?:bionic|x2|pro|razr))?(:?\s4g)?)[\w\s]+build\//i,
            /mot[\s-]?(\w+)*/i,
            /(XT\d{3,4}) build\//i,
            /(nexus\s6)/i
            ], [MODEL, [VENDOR, 'Motorola'], [TYPE, MOBILE]], [
            /android.+\s(mz60\d|xoom[\s2]{0,2})\sbuild\//i
            ], [MODEL, [VENDOR, 'Motorola'], [TYPE, TABLET]], [

            /hbbtv\/\d+\.\d+\.\d+\s+\([\w\s]*;\s*(\w[^;]*);([^;]*)/i            // HbbTV devices
            ], [[VENDOR, util.trim], [MODEL, util.trim], [TYPE, SMARTTV]], [

            /hbbtv.+maple;(\d+)/i
            ], [[MODEL, /^/, 'SmartTV'], [VENDOR, 'Samsung'], [TYPE, SMARTTV]], [

            /\(dtv[\);].+(aquos)/i                                              // Sharp
            ], [MODEL, [VENDOR, 'Sharp'], [TYPE, SMARTTV]], [

            /android.+((sch-i[89]0\d|shw-m380s|gt-p\d{4}|gt-n\d+|sgh-t8[56]9|nexus 10))/i,
            /((SM-T\w+))/i
            ], [[VENDOR, 'Samsung'], MODEL, [TYPE, TABLET]], [                  // Samsung
            /smart-tv.+(samsung)/i
            ], [VENDOR, [TYPE, SMARTTV], MODEL], [
            /((s[cgp]h-\w+|gt-\w+|galaxy\snexus|sm-\w[\w\d]+))/i,
            /(sam[sung]*)[\s-]*(\w+-?[\w-]*)*/i,
            /sec-((sgh\w+))/i
            ], [[VENDOR, 'Samsung'], MODEL, [TYPE, MOBILE]], [

            /sie-(\w+)*/i                                                       // Siemens
            ], [MODEL, [VENDOR, 'Siemens'], [TYPE, MOBILE]], [

            /(maemo|nokia).*(n900|lumia\s\d+)/i,                                // Nokia
            /(nokia)[\s_-]?([\w-]+)*/i
            ], [[VENDOR, 'Nokia'], MODEL, [TYPE, MOBILE]], [

            /android\s3\.[\s\w;-]{10}(a\d{3})/i                                 // Acer
            ], [MODEL, [VENDOR, 'Acer'], [TYPE, TABLET]], [

            /android.+([vl]k\-?\d{3})\s+build/i                                 // LG Tablet
            ], [MODEL, [VENDOR, 'LG'], [TYPE, TABLET]], [
            /android\s3\.[\s\w;-]{10}(lg?)-([06cv9]{3,4})/i                     // LG Tablet
            ], [[VENDOR, 'LG'], MODEL, [TYPE, TABLET]], [
            /(lg) netcast\.tv/i                                                 // LG SmartTV
            ], [VENDOR, MODEL, [TYPE, SMARTTV]], [
            /(nexus\s[45])/i,                                                   // LG
            /lg[e;\s\/-]+(\w+)*/i,
            /android.+lg(\-?[\d\w]+)\s+build/i
            ], [MODEL, [VENDOR, 'LG'], [TYPE, MOBILE]], [

            /android.+(ideatab[a-z0-9\-\s]+)/i                                  // Lenovo
            ], [MODEL, [VENDOR, 'Lenovo'], [TYPE, TABLET]], [

            /linux;.+((jolla));/i                                               // Jolla
            ], [VENDOR, MODEL, [TYPE, MOBILE]], [

            /((pebble))app\/[\d\.]+\s/i                                         // Pebble
            ], [VENDOR, MODEL, [TYPE, WEARABLE]], [

            /android.+;\s(oppo)\s?([\w\s]+)\sbuild/i                            // OPPO
            ], [VENDOR, MODEL, [TYPE, MOBILE]], [

            /crkey/i                                                            // Google Chromecast
            ], [[MODEL, 'Chromecast'], [VENDOR, 'Google']], [

            /android.+;\s(glass)\s\d/i                                          // Google Glass
            ], [MODEL, [VENDOR, 'Google'], [TYPE, WEARABLE]], [

            /android.+;\s(pixel c)\s/i                                          // Google Pixel C
            ], [MODEL, [VENDOR, 'Google'], [TYPE, TABLET]], [

            /android.+;\s(pixel xl|pixel)\s/i                                   // Google Pixel
            ], [MODEL, [VENDOR, 'Google'], [TYPE, MOBILE]], [

            /android.+(\w+)\s+build\/hm\1/i,                                    // Xiaomi Hongmi 'numeric' models
            /android.+(hm[\s\-_]*note?[\s_]*(?:\d\w)?)\s+build/i,               // Xiaomi Hongmi
            /android.+(mi[\s\-_]*(?:one|one[\s_]plus|note lte)?[\s_]*(?:\d\w)?)\s+build/i,    // Xiaomi Mi
            /android.+(redmi[\s\-_]*(?:note)?(?:[\s_]*[\w\s]+)?)\s+build/i      // Redmi Phones
            ], [[MODEL, /_/g, ' '], [VENDOR, 'Xiaomi'], [TYPE, MOBILE]], [
            /android.+(mi[\s\-_]*(?:pad)?(?:[\s_]*[\w\s]+)?)\s+build/i          // Mi Pad tablets
            ],[[MODEL, /_/g, ' '], [VENDOR, 'Xiaomi'], [TYPE, TABLET]], [
            /android.+;\s(m[1-5]\snote)\sbuild/i                                // Meizu Tablet
            ], [MODEL, [VENDOR, 'Meizu'], [TYPE, TABLET]], [

            /android.+a000(1)\s+build/i                                         // OnePlus
            ], [MODEL, [VENDOR, 'OnePlus'], [TYPE, MOBILE]], [

            /android.+[;\/]\s*(RCT[\d\w]+)\s+build/i                            // RCA Tablets
            ], [MODEL, [VENDOR, 'RCA'], [TYPE, TABLET]], [

            /android.+[;\/]\s*(Venue[\d\s]*)\s+build/i                          // Dell Venue Tablets
            ], [MODEL, [VENDOR, 'Dell'], [TYPE, TABLET]], [

            /android.+[;\/]\s*(Q[T|M][\d\w]+)\s+build/i                         // Verizon Tablet
            ], [MODEL, [VENDOR, 'Verizon'], [TYPE, TABLET]], [

            /android.+[;\/]\s+(Barnes[&\s]+Noble\s+|BN[RT])(V?.*)\s+build/i     // Barnes & Noble Tablet
            ], [[VENDOR, 'Barnes & Noble'], MODEL, [TYPE, TABLET]], [

            /android.+[;\/]\s+(TM\d{3}.*\b)\s+build/i                           // Barnes & Noble Tablet
            ], [MODEL, [VENDOR, 'NuVision'], [TYPE, TABLET]], [

            /android.+[;\/]\s*(zte)?.+(k\d{2})\s+build/i                        // ZTE K Series Tablet
            ], [[VENDOR, 'ZTE'], MODEL, [TYPE, TABLET]], [

            /android.+[;\/]\s*(gen\d{3})\s+build.*49h/i                         // Swiss GEN Mobile
            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, MOBILE]], [

            /android.+[;\/]\s*(zur\d{3})\s+build/i                              // Swiss ZUR Tablet
            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, TABLET]], [

            /android.+[;\/]\s*((Zeki)?TB.*\b)\s+build/i                         // Zeki Tablets
            ], [MODEL, [VENDOR, 'Zeki'], [TYPE, TABLET]], [

            /(android).+[;\/]\s+([YR]\d{2}x?.*)\s+build/i,
            /android.+[;\/]\s+(Dragon[\-\s]+Touch\s+|DT)(.+)\s+build/i          // Dragon Touch Tablet
            ], [[VENDOR, 'Dragon Touch'], MODEL, [TYPE, TABLET]], [

            /android.+[;\/]\s*(NS-?.+)\s+build/i                                // Insignia Tablets
            ], [MODEL, [VENDOR, 'Insignia'], [TYPE, TABLET]], [

            /android.+[;\/]\s*((NX|Next)-?.+)\s+build/i                         // NextBook Tablets
            ], [MODEL, [VENDOR, 'NextBook'], [TYPE, TABLET]], [

            /android.+[;\/]\s*(Xtreme\_?)?(V(1[045]|2[015]|30|40|60|7[05]|90))\s+build/i
            ], [[VENDOR, 'Voice'], MODEL, [TYPE, MOBILE]], [                    // Voice Xtreme Phones

            /android.+[;\/]\s*(LVTEL\-?)?(V1[12])\s+build/i                     // LvTel Phones
            ], [[VENDOR, 'LvTel'], MODEL, [TYPE, MOBILE]], [

            /android.+[;\/]\s*(V(100MD|700NA|7011|917G).*\b)\s+build/i          // Envizen Tablets
            ], [MODEL, [VENDOR, 'Envizen'], [TYPE, TABLET]], [

            /android.+[;\/]\s*(Le[\s\-]+Pan)[\s\-]+(.*\b)\s+build/i             // Le Pan Tablets
            ], [VENDOR, MODEL, [TYPE, TABLET]], [

            /android.+[;\/]\s*(Trio[\s\-]*.*)\s+build/i                         // MachSpeed Tablets
            ], [MODEL, [VENDOR, 'MachSpeed'], [TYPE, TABLET]], [

            /android.+[;\/]\s*(Trinity)[\-\s]*(T\d{3})\s+build/i                // Trinity Tablets
            ], [VENDOR, MODEL, [TYPE, TABLET]], [

            /android.+[;\/]\s*TU_(1491)\s+build/i                               // Rotor Tablets
            ], [MODEL, [VENDOR, 'Rotor'], [TYPE, TABLET]], [

            /android.+(KS(.+))\s+build/i                                        // Amazon Kindle Tablets
            ], [MODEL, [VENDOR, 'Amazon'], [TYPE, TABLET]], [

            /android.+(Gigaset)[\s\-]+(Q.+)\s+build/i                           // Gigaset Tablets
            ], [VENDOR, MODEL, [TYPE, TABLET]], [

            /\s(tablet|tab)[;\/]/i,                                             // Unidentifiable Tablet
            /\s(mobile)(?:[;\/]|\ssafari)/i                                     // Unidentifiable Mobile
            ], [[TYPE, util.lowerize], VENDOR, MODEL], [

            /(android.+)[;\/].+build/i                                          // Generic Android Device
            ], [MODEL, [VENDOR, 'Generic']]


        /*//////////////////////////
            // TODO: move to string map
            ////////////////////////////

            /(C6603)/i                                                          // Sony Xperia Z C6603
            ], [[MODEL, 'Xperia Z C6603'], [VENDOR, 'Sony'], [TYPE, MOBILE]], [
            /(C6903)/i                                                          // Sony Xperia Z 1
            ], [[MODEL, 'Xperia Z 1'], [VENDOR, 'Sony'], [TYPE, MOBILE]], [

            /(SM-G900[F|H])/i                                                   // Samsung Galaxy S5
            ], [[MODEL, 'Galaxy S5'], [VENDOR, 'Samsung'], [TYPE, MOBILE]], [
            /(SM-G7102)/i                                                       // Samsung Galaxy Grand 2
            ], [[MODEL, 'Galaxy Grand 2'], [VENDOR, 'Samsung'], [TYPE, MOBILE]], [
            /(SM-G530H)/i                                                       // Samsung Galaxy Grand Prime
            ], [[MODEL, 'Galaxy Grand Prime'], [VENDOR, 'Samsung'], [TYPE, MOBILE]], [
            /(SM-G313HZ)/i                                                      // Samsung Galaxy V
            ], [[MODEL, 'Galaxy V'], [VENDOR, 'Samsung'], [TYPE, MOBILE]], [
            /(SM-T805)/i                                                        // Samsung Galaxy Tab S 10.5
            ], [[MODEL, 'Galaxy Tab S 10.5'], [VENDOR, 'Samsung'], [TYPE, TABLET]], [
            /(SM-G800F)/i                                                       // Samsung Galaxy S5 Mini
            ], [[MODEL, 'Galaxy S5 Mini'], [VENDOR, 'Samsung'], [TYPE, MOBILE]], [
            /(SM-T311)/i                                                        // Samsung Galaxy Tab 3 8.0
            ], [[MODEL, 'Galaxy Tab 3 8.0'], [VENDOR, 'Samsung'], [TYPE, TABLET]], [

            /(T3C)/i                                                            // Advan Vandroid T3C
            ], [MODEL, [VENDOR, 'Advan'], [TYPE, TABLET]], [
            /(ADVAN T1J\+)/i                                                    // Advan Vandroid T1J+
            ], [[MODEL, 'Vandroid T1J+'], [VENDOR, 'Advan'], [TYPE, TABLET]], [
            /(ADVAN S4A)/i                                                      // Advan Vandroid S4A
            ], [[MODEL, 'Vandroid S4A'], [VENDOR, 'Advan'], [TYPE, MOBILE]], [

            /(V972M)/i                                                          // ZTE V972M
            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, MOBILE]], [

            /(i-mobile)\s(IQ\s[\d\.]+)/i                                        // i-mobile IQ
            ], [VENDOR, MODEL, [TYPE, MOBILE]], [
            /(IQ6.3)/i                                                          // i-mobile IQ IQ 6.3
            ], [[MODEL, 'IQ 6.3'], [VENDOR, 'i-mobile'], [TYPE, MOBILE]], [
            /(i-mobile)\s(i-style\s[\d\.]+)/i                                   // i-mobile i-STYLE
            ], [VENDOR, MODEL, [TYPE, MOBILE]], [
            /(i-STYLE2.1)/i                                                     // i-mobile i-STYLE 2.1
            ], [[MODEL, 'i-STYLE 2.1'], [VENDOR, 'i-mobile'], [TYPE, MOBILE]], [

            /(mobiistar touch LAI 512)/i                                        // mobiistar touch LAI 512
            ], [[MODEL, 'Touch LAI 512'], [VENDOR, 'mobiistar'], [TYPE, MOBILE]], [

            /////////////
            // END TODO
            ///////////*/

        ],

        engine : [[

            /windows.+\sedge\/([\w\.]+)/i                                       // EdgeHTML
            ], [VERSION, [NAME, 'EdgeHTML']], [

            /(presto)\/([\w\.]+)/i,                                             // Presto
            /(webkit|trident|netfront|netsurf|amaya|lynx|w3m)\/([\w\.]+)/i,     // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m
            /(khtml|tasman|links)[\/\s]\(?([\w\.]+)/i,                          // KHTML/Tasman/Links
            /(icab)[\/\s]([23]\.[\d\.]+)/i                                      // iCab
            ], [NAME, VERSION], [

            /rv\:([\w\.]+).*(gecko)/i                                           // Gecko
            ], [VERSION, NAME]
        ],

        os : [[

            // Windows based
            /microsoft\s(windows)\s(vista|xp)/i                                 // Windows (iTunes)
            ], [NAME, VERSION], [
            /(windows)\snt\s6\.2;\s(arm)/i,                                     // Windows RT
            /(windows\sphone(?:\sos)*)[\s\/]?([\d\.\s]+\w)*/i,                  // Windows Phone
            /(windows\smobile|windows)[\s\/]?([ntce\d\.\s]+\w)/i
            ], [NAME, [VERSION, mapper.str, maps.os.windows.version]], [
            /(win(?=3|9|n)|win\s9x\s)([nt\d\.]+)/i
            ], [[NAME, 'Windows'], [VERSION, mapper.str, maps.os.windows.version]], [

            // Mobile/Embedded OS
            /\((bb)(10);/i                                                      // BlackBerry 10
            ], [[NAME, 'BlackBerry'], VERSION], [
            /(blackberry)\w*\/?([\w\.]+)*/i,                                    // Blackberry
            /(tizen)[\/\s]([\w\.]+)/i,                                          // Tizen
            /(android|webos|palm\sos|qnx|bada|rim\stablet\sos|meego|contiki)[\/\s-]?([\w\.]+)*/i,
                                                                                // Android/WebOS/Palm/QNX/Bada/RIM/MeeGo/Contiki
            /linux;.+(sailfish);/i                                              // Sailfish OS
            ], [NAME, VERSION], [
            /(symbian\s?os|symbos|s60(?=;))[\/\s-]?([\w\.]+)*/i                 // Symbian
            ], [[NAME, 'Symbian'], VERSION], [
            /\((series40);/i                                                    // Series 40
            ], [NAME], [
            /mozilla.+\(mobile;.+gecko.+firefox/i                               // Firefox OS
            ], [[NAME, 'Firefox OS'], VERSION], [

            // Console
            /(nintendo|playstation)\s([wids34portablevu]+)/i,                   // Nintendo/Playstation

            // GNU/Linux based
            /(mint)[\/\s\(]?(\w+)*/i,                                           // Mint
            /(mageia|vectorlinux)[;\s]/i,                                       // Mageia/VectorLinux
            /(joli|[kxln]?ubuntu|debian|[open]*suse|gentoo|(?=\s)arch|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk|linpus)[\/\s-]?(?!chrom)([\w\.-]+)*/i,
                                                                                // Joli/Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware
                                                                                // Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus
            /(hurd|linux)\s?([\w\.]+)*/i,                                       // Hurd/Linux
            /(gnu)\s?([\w\.]+)*/i                                               // GNU
            ], [NAME, VERSION], [

            /(cros)\s[\w]+\s([\w\.]+\w)/i                                       // Chromium OS
            ], [[NAME, 'Chromium OS'], VERSION],[

            // Solaris
            /(sunos)\s?([\w\.]+\d)*/i                                           // Solaris
            ], [[NAME, 'Solaris'], VERSION], [

            // BSD based
            /\s([frentopc-]{0,4}bsd|dragonfly)\s?([\w\.]+)*/i                   // FreeBSD/NetBSD/OpenBSD/PC-BSD/DragonFly
            ], [NAME, VERSION],[

            /(haiku)\s(\w+)/i                                                  // Haiku
            ], [NAME, VERSION],[

            /cfnetwork\/.+darwin/i,
            /ip[honead]+(?:.*os\s([\w]+)\slike\smac|;\sopera)/i                 // iOS
            ], [[VERSION, /_/g, '.'], [NAME, 'iOS']], [

            /(mac\sos\sx)\s?([\w\s\.]+\w)*/i,
            /(macintosh|mac(?=_powerpc)\s)/i                                    // Mac OS
            ], [[NAME, 'Mac OS'], [VERSION, /_/g, '.']], [

            // Other
            /((?:open)?solaris)[\/\s-]?([\w\.]+)*/i,                            // Solaris
            /(aix)\s((\d)(?=\.|\)|\s)[\w\.]*)*/i,                               // AIX
            /(plan\s9|minix|beos|os\/2|amigaos|morphos|risc\sos|openvms)/i,
                                                                                // Plan9/Minix/BeOS/OS2/AmigaOS/MorphOS/RISCOS/OpenVMS
            /(unix)\s?([\w\.]+)*/i                                              // UNIX
            ], [NAME, VERSION]
        ]
    };


    /////////////////
    // Constructor
    ////////////////
    /*
    var Browser = function (name, version) {
        this[NAME] = name;
        this[VERSION] = version;
    };
    var CPU = function (arch) {
        this[ARCHITECTURE] = arch;
    };
    var Device = function (vendor, model, type) {
        this[VENDOR] = vendor;
        this[MODEL] = model;
        this[TYPE] = type;
    };
    var Engine = Browser;
    var OS = Browser;
    */
    var UAParser = function (uastring, extensions) {

        if (typeof uastring === 'object') {
            extensions = uastring;
            uastring = undefined;
        }

        if (!(this instanceof UAParser)) {
            return new UAParser(uastring, extensions).getResult();
        }

        var ua = uastring || ((window && window.navigator && window.navigator.userAgent) ? window.navigator.userAgent : EMPTY);
        var rgxmap = extensions ? util.extend(regexes, extensions) : regexes;
        //var browser = new Browser();
        //var cpu = new CPU();
        //var device = new Device();
        //var engine = new Engine();
        //var os = new OS();

        this.getBrowser = function () {
            var browser = { name: undefined, version: undefined };
            mapper.rgx.call(browser, ua, rgxmap.browser);
            browser.major = util.major(browser.version); // deprecated
            return browser;
        };
        this.getCPU = function () {
            var cpu = { architecture: undefined };
            mapper.rgx.call(cpu, ua, rgxmap.cpu);
            return cpu;
        };
        this.getDevice = function () {
            var device = { vendor: undefined, model: undefined, type: undefined };
            mapper.rgx.call(device, ua, rgxmap.device);
            return device;
        };
        this.getEngine = function () {
            var engine = { name: undefined, version: undefined };
            mapper.rgx.call(engine, ua, rgxmap.engine);
            return engine;
        };
        this.getOS = function () {
            var os = { name: undefined, version: undefined };
            mapper.rgx.call(os, ua, rgxmap.os);
            return os;
        };
        this.getResult = function () {
            return {
                ua      : this.getUA(),
                browser : this.getBrowser(),
                engine  : this.getEngine(),
                os      : this.getOS(),
                device  : this.getDevice(),
                cpu     : this.getCPU()
            };
        };
        this.getUA = function () {
            return ua;
        };
        this.setUA = function (uastring) {
            ua = uastring;
            //browser = new Browser();
            //cpu = new CPU();
            //device = new Device();
            //engine = new Engine();
            //os = new OS();
            return this;
        };
        return this;
    };

    UAParser.VERSION = LIBVERSION;
    UAParser.BROWSER = {
        NAME    : NAME,
        MAJOR   : MAJOR, // deprecated
        VERSION : VERSION
    };
    UAParser.CPU = {
        ARCHITECTURE : ARCHITECTURE
    };
    UAParser.DEVICE = {
        MODEL   : MODEL,
        VENDOR  : VENDOR,
        TYPE    : TYPE,
        CONSOLE : CONSOLE,
        MOBILE  : MOBILE,
        SMARTTV : SMARTTV,
        TABLET  : TABLET,
        WEARABLE: WEARABLE,
        EMBEDDED: EMBEDDED
    };
    UAParser.ENGINE = {
        NAME    : NAME,
        VERSION : VERSION
    };
    UAParser.OS = {
        NAME    : NAME,
        VERSION : VERSION
    };
    //UAParser.Utils = util;

    ///////////
    // Export
    //////////


    // check js environment
    if (typeof(exports) !== UNDEF_TYPE) {
        // nodejs env
        if (typeof module !== UNDEF_TYPE && module.exports) {
            exports = module.exports = UAParser;
        }
        // TODO: test!!!!!!!!
        /*
        if (require && require.main === module && process) {
            // cli
            var jsonize = function (arr) {
                var res = [];
                for (var i in arr) {
                    res.push(new UAParser(arr[i]).getResult());
                }
                process.stdout.write(JSON.stringify(res, null, 2) + '\n');
            };
            if (process.stdin.isTTY) {
                // via args
                jsonize(process.argv.slice(2));
            } else {
                // via pipe
                var str = '';
                process.stdin.on('readable', function() {
                    var read = process.stdin.read();
                    if (read !== null) {
                        str += read;
                    }
                });
                process.stdin.on('end', function () {
                    jsonize(str.replace(/\n$/, '').split('\n'));
                });
            }
        }
        */
        exports.UAParser = UAParser;
    } else {
        // requirejs env (optional)
        if (typeof(define) === FUNC_TYPE && define.amd) {
            define(function () {
                return UAParser;
            });
        } else if (window) {
            // browser env
            window.UAParser = UAParser;
        }
    }

    // jQuery/Zepto specific (optional)
    // Note:
    //   In AMD env the global scope should be kept clean, but jQuery is an exception.
    //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,
    //   and we should catch that.
    var $ = window && (window.jQuery || window.Zepto);
    if (typeof $ !== UNDEF_TYPE) {
        var parser = new UAParser();
        $.ua = parser.getResult();
        $.ua.get = function () {
            return parser.getUA();
        };
        $.ua.set = function (uastring) {
            parser.setUA(uastring);
            var result = parser.getResult();
            for (var prop in result) {
                $.ua[prop] = result[prop];
            }
        };
    }

})(typeof window === 'object' ? window : this);

},{}],6:[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; /* global console */


var _jwtDecode = require('jwt-decode');

var _jwtDecode2 = _interopRequireDefault(_jwtDecode);

require('match-media');

var _uaParserJs = require('ua-parser-js');

var _uaParserJs2 = _interopRequireDefault(_uaParserJs);

var _utm = require('./utm');

var _utm2 = _interopRequireDefault(_utm);

var _widgetDom = require('./widget-dom');

var dom = _interopRequireWildcard(_widgetDom);

var _widgetUtils = require('./widget-utils');

var _widgetVk = require('./widget-vk');

var _widgetVk2 = _interopRequireDefault(_widgetVk);

var _widgetConst = require('./widget-const');

var _widgetTilda = require('./widget-tilda');

var _widgetTilda2 = _interopRequireDefault(_widgetTilda);

var _widgetMessages = require('./widget-messages');

var _widgetMessages2 = _interopRequireDefault(_widgetMessages);

var _widgetShowroom = require('./widget-showroom');

var _widgetShowroom2 = _interopRequireDefault(_widgetShowroom);

var _widgetAnalytics = require('./widget-analytics');

var _widgetAnalytics2 = _interopRequireDefault(_widgetAnalytics);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(function () {
  var isOrderSuccess = /tcordersuccess=\d+/.test(window.location.search);

  var swiped = false;
  var stylesLink = void 0;
  var handler = void 0;
  var utm = void 0;
  var topDomain = void 0;
  /**
   * list of the default iframe css properties to write to style attribute
   * property name must be written in camelCase
   * @constant {object}
   */
  var DEFAULT_IFRAME_STYLES = {
    opacity: 1,
    margin: 0,
    marginLeft: 0
  };

  function setSwiped() {
    swiped = true;
  }

  var _bindBuyTicketClickCallback = function bindBuyTicketClickCallback() {
    var body = document.querySelector('body');
    if (body) {
      if ('ontouchend' in window) {
        body.addEventListener('touchend', showPopupClickHandler);
        body.addEventListener('touchmove', setSwiped);
      }
      body.addEventListener('click', showPopupClickHandler);
      _bindBuyTicketClickCallback = function bindBuyTicketClickCallback() {};
    }
  };

  function changeFrameId(data) {
    document.querySelector('[name="tc-frame-' + data.from + '"]').setAttribute('name', 'tc-frame-' + data.to);
  }

  function showEventPopupWidget(params) {
    var body = document.getElementsByTagName('body')[0];
    var frameId = params.event || params.partner;
    var iFrameSelector = '[name="tc-frame-' + frameId + '"]';
    var iFrame = document.querySelector(iFrameSelector);
    var iFrameSrc = void 0;

    params.lang = params.lang || 'ru';
    params.frameType = 'w';

    if (!(iFrame && (0, _widgetUtils.isPopupWidgetContainer)(iFrame.parentNode))) {
      iFrameSrc = params.partner ? _widgetShowroom2.default.getIFrameUrl(params.partner) : dom.generateSaleIFrameUrl(params, utm);
      dom.appendWidget(iFrameSrc, params.event || params.partner, utm);
      body.addEventListener('keyup', keyupCallback);
      dom.disableGlobalScroll();

      if ((0, _widgetUtils.isWidgetShowroom)()) {
        _widgetVk2.default.scrollTop();
        _widgetMessages2.default.sendHeight();
      }
    }
  }

  function messageCallback(e) {
    var host = _widgetConst.IFRAME_DOMAIN.split(':').slice(1, 2).join().replace('//', '');
    var domainRegExp = new RegExp('(' + host + '|sr.ticketscloud.org)');

    if (domainRegExp.test(e.origin)) {
      var data = _widgetMessages2.default.parseData(e.data);

      if (data && data.action) {
        switch (data.action) {
          case 'closeBooking':
            if (isOrderSuccess) {
              redirectStripOrderNum();
            } else {
              var body = document.querySelector('body');
              dom.removeEventPopupWidget(data.event, _widgetMessages2.default.sendHeight());
              body.removeEventListener('keyup', keyupCallback);
            }
            break;
          case 'changeFrameId':
            changeFrameId(data);
            break;
          case 'setHeight':
            data.fromShowroom = (0, _widgetUtils.isShowroom)();
            if (data.height) data.height = Math.round(data.height);
            setIFramesHeight(data);
            // if (typeof data.fullScreen !== 'undefined' && isFullScreen !== data.fullScreen) {
            //   isFullScreen = data.fullScreen;
            //   e.source.postMessage(JSON.stringify({
            //     action: 'tcForceResize'
            //   }), '*');
            // }
            // if (window.parent !== window) {
            //   window.parent.postMessage(JSON.stringify(data), '*');
            // }
            break;
          case 'VKRetarget':
            _widgetVk2.default.setRetarget(data.hashes);
            break;
          case 'tcUTM':
            if (utm && utm.id && e.source !== undefined) {
              e.source.postMessage(JSON.stringify({ action: 'tcUTM', utm: utm.id }), '*');
            }
            break;
          case 'getDomain':
            e.source.postMessage(JSON.stringify({ action: 'setDomain', domain: window.location.hostname }), '*');
            break;
          case 'setDomain':
            topDomain = data.domain;
            break;
          default:
        }
      }
    }
  }

  function keyupCallback(e) {
    if (e.keyCode === 27) {
      _widgetMessages2.default.sendCancelOrder();
    }
  }

  function redirectStripOrderNum() {
    var url = window.location.href.replace(/&tc_event=\w+/, '').replace(/&tc_partner=\w+/, '');

    if (/tc_order_success=\w+&/.test(window.location.search)) {
      window.location.replace(url.replace(/tc_order_success=\w+&/, ''));
    } else if (/&tc_order_success=\w+/.test(window.location.search)) {
      window.location.replace(url.replace(/&tc_order_success=\w+/, ''));
    } else {
      window.location.replace(url.replace(/\?tc_order_success=\w+\/?/, ''));
    }
  }

  function getTicketsCloudPlaceholders() {
    return {
      links: document.querySelectorAll('[data-tc-event], [tc-event]'),
      inlines: document.querySelectorAll('[data-tc-event-inline], [tc-event-inline]'),
      integrated: document.querySelectorAll('[data-tc-event-integrated], [tc-event-integrated]'),
      showroom: document.querySelectorAll('[data-tc-showroom]'),
      showroomInline: document.querySelectorAll('[data-tc-showroom-inline]')
    };
  }

  function findWidgetTrigger(handlers) {
    var path = [];
    var i = void 0;
    var j = void 0;

    if (Object.prototype.toString.call(handlers) !== '[object Array]' && Object.prototype.toString.call(handlers) !== '[object NodeList]') {
      var element = handlers;
      do {
        path.push(element);
        element = element.parentNode;
      } while (element && element.parentNode && element.tagName !== 'BODY');
    } else {
      path = handlers;
    }

    for (i = 0, j = path.length; i < j; i += 1) {
      if ((0, _widgetUtils.getEventId)(path[i]) || _widgetShowroom2.default.isTrigger(path[i]) || path[i].tagName === 'BODY') {
        return path[i];
      }
    }

    return path[i - 1];
  }

  function showMobileWidget(params) {
    params.frameType = 'mobile';
    var opened = window.open(dom.generateSaleIFrameUrl(params, utm), '_blank');
    if (!opened) {
      window.location = dom.generateSaleIFrameUrl(params, utm);
    }
  }

  function isDeviceMobile() {
    var device = new _uaParserJs2.default().getDevice();
    return device.type && ['mobile', 'tablet', 'smarttv'].indexOf(device.type) > -1;
  }

  function showEventWidget(widgetParams) {
    if (isDeviceMobile() && widgetParams.event) {
      showMobileWidget(widgetParams);
    } else {
      showEventPopupWidget(widgetParams);
    }
  }

  function showPopupClickHandler(e) {
    if (swiped) {
      swiped = false;
      return;
    }
    var path = e.path || (e.originalEvent && e.originalEvent.path ? e.originalEvent.path : null);
    var widgetTrigger = findWidgetTrigger(path || e.target);
    var widgetParams = (0, _widgetUtils.getWidgetParams)(widgetTrigger);

    if (widgetParams.token && widgetParams.event) {
      e.preventDefault();
      showEventWidget(widgetParams);
    } else if (widgetParams.token && _widgetShowroom2.default.isTrigger(widgetTrigger)) {
      e.preventDefault();
      var tokenObj = (0, _jwtDecode2.default)(widgetParams.token);
      widgetParams.partner = tokenObj.partner || tokenObj.p;
      showEventWidget(widgetParams);
    } else if (widgetParams.event) {
      (0, _widgetUtils.logError)(widgetParams);
    }
  }

  function initInlineIntegratedWidgets(placeholders) {
    Array.prototype.forEach.call(placeholders.inlines, function (item) {
      var type = isDeviceMobile() ? _widgetConst.WIDGET_TYPE_MOBILE : _widgetConst.WIDGET_TYPE_INLINE;
      dom.appendInlineWidget(item, type, utm);
    });

    Array.prototype.forEach.call(placeholders.integrated, function (item) {
      dom.appendInlineWidget(item, _widgetConst.WIDGET_TYPE_INTEGRATED, utm);
    });
  }

  function setIFramesHeight(params) {
    var iFrame = document.querySelectorAll('[name="tc-frame-' + params.event + '"]');
    Array.prototype.forEach.call(iFrame, function (frame) {
      _widgetVk2.default.setHeight(params.height);
      var isInline = !(0, _widgetUtils.isPopupWidgetContainer)(frame.parentNode);
      var defaultStyle = getIFrameDefaultStyles(frame);

      var height = params.height && (isInline || params.fromShowroom) ? params.height + 'px' : '100%';
      var style = defaultStyle + 'height: ' + height + ' !important;';
      frame.setAttribute('height', height);
      frame.setAttribute('style', style);
      if (params.goTop) {
        scrollToTop(frame);
      }
      var container = frame.parentNode;
      dom.positionWidget({ container: container, height: params.height, fullScreen: params.fullScreen, topDomain: topDomain });

      if (params.height && isInline && frame.parentNode && frame.parentNode.parentNode && frame.parentNode.parentNode.clientHeight < params.height) {
        frame.parentNode.parentNode.style.overflow = 'auto';
      }
    });
  }

  function getIFrameDefaultStyles() {
    return Object.keys(DEFAULT_IFRAME_STYLES).reduce(function (res, prop) {
      res += (0, _widgetUtils.toKebab)(prop) + ':' + DEFAULT_IFRAME_STYLES[prop] + ' !important;';
      return res;
    }, '');
  }

  function resizeFrame() {
    var iFrame = document.querySelector('.tc-widget-frame_popup');
    var inlineFrames = document.querySelectorAll('.tc-widget-inline');

    if (!(iFrame || inlineFrames.length)) return;

    var emitter = iFrame || inlineFrames[0];

    setFrameWidth(iFrame);
    Array.prototype.forEach.call(inlineFrames, setFrameWidth);
    emitter.contentWindow.postMessage(JSON.stringify({ action: 'tcForceResize' }), '*');
  }

  function setFrameWidth(frame) {
    var width = (0, _widgetUtils.calcWidgetWidth)();
    var iFrameWidth = frame ? frame.getAttribute('width') : _widgetConst.FRAME_WIDTH;

    if (frame && iFrameWidth && iFrameWidth !== '100%') {
      frame.setAttribute('width', width + 'px');
    }
  }

  function scrollToTop(iframe) {
    var offset = iframe.getBoundingClientRect().top;
    if (iframe.tagName === 'IFRAME') {
      iframe = iframe.parentNode;
    }
    iframe.scrollTop = 0;
    if (!(0, _widgetUtils.isPopupWidgetContainer)(iframe) && offset < 0) {
      window.scrollBy(0, offset);
    }
  }

  function hasWidgetPlaceholders(placeholders) {
    return placeholders && (placeholders.links.length !== 0 || placeholders.inlines.length !== 0 || placeholders.integrated.length !== 0);
  }

  function frameResizeCallback() {
    if (handler) clearTimeout(handler);
    handler = setTimeout(resizeFrame, 100);
  }

  function utmDispatchButtonAdded(placeholders) {
    var filtered = Array.prototype.filter.call(placeholders, function (element) {
      return element.getAttribute('data-tc-event') && element.getAttribute('data-tc-token');
    });
    var data = filtered.map(function (element) {
      return {
        event: element.getAttribute('data-tc-event'),
        token: element.getAttribute('data-tc-token')
      };
    });
    if (data.length === 0) {
      return;
    }
    utm.dispatch(utm.actions.buttonAdded, data);
  }

  function setVKInitHeight() {
    if (window.VK && window.VK.callMethod) {
      var bodyBoundings = document.querySelector('body').getBoundingClientRect().height;
      window.VK.callMethod('resizeWindow', bodyBoundings.width, bodyBoundings.height);
    }
  }

  function getCookie(name) {
    var clean = name.replace(/([.$?*|{}()[\]\\/+^])/g, '\\$1');
    var matches = document.cookie.match(new RegExp('(?:^|; )' + clean + '=([^;]*)'));
    return matches ? decodeURIComponent(matches[1]) : undefined;
  }

  function processTilda() {
    var isTilda = Boolean(document.querySelector('[data-tilda-project-id]'));
    if (!isTilda) {
      return;
    }

    var links = document.querySelectorAll('a[href^="#ticketscloud:"]');
    Array.prototype.forEach.call(links, function (link) {
      var href = link.getAttribute('href');
      var params = href.match(/#ticketscloud:(.+)/)[1].split('&').reduce(function (acc, param) {
        acc[param.split('=')[0]] = param.split('=')[1];
        return acc;
      }, {});

      if ((params.showroom || params.event) && params.token) {
        link.setAttribute('data-tc-token', params.token);
        if (params.event) {
          link.setAttribute('data-tc-event', params.event);
        }
        if (params.showroom) {
          link.setAttribute('data-tc-showroom', true);
        }
        if (params.lang) {
          link.setAttribute('data-tc-lang', params.lang);
        }
      }
    });
  }

  // replaceWith polyfill
  function ReplaceWith(Ele) {
    'use-strict'; // For safari, and IE > 10

    var parent = this.parentNode,
        i = arguments.length,
        firstIsNode = +(parent && (typeof Ele === 'undefined' ? 'undefined' : _typeof(Ele)) === 'object');
    if (!parent) return;

    while (i-- > firstIsNode) {
      if (parent && _typeof(arguments[i]) !== 'object') {
        arguments[i] = document.createTextNode(arguments[i]);
      }if (!parent && arguments[i].parentNode) {
        arguments[i].parentNode.removeChild(arguments[i]);
        continue;
      }
      parent.insertBefore(this.previousSibling, arguments[i]);
    }
    if (firstIsNode) parent.replaceChild(Ele, this);
  }
  if (!Element.prototype.replaceWith) Element.prototype.replaceWith = ReplaceWith;
  if (!CharacterData.prototype.replaceWith) CharacterData.prototype.replaceWith = ReplaceWith;
  if (!DocumentType.prototype.replaceWith) DocumentType.prototype.replaceWith = ReplaceWith;

  function init() {
    _widgetTilda2.default.init();

    var placeholders = getTicketsCloudPlaceholders();

    if (isDeviceMobile()) {
      Array.prototype.forEach.call(['inlines', 'integrated'], function (type) {
        if (placeholders[type].length) {
          Array.prototype.forEach.call(placeholders[type], function (inline) {
            var button = document.createElement('button'),
                lang = inline.getAttribute('data-tc-lang');

            if (lang) button.setAttribute('data-tc-lang', lang);
            button.setAttribute('data-tc-event', inline.getAttribute("data-tc-event-" + (type === 'inlines' ? 'inline' : type)) || inline.getAttribute('tc-event-' + +(type === 'inlines' ? 'inline' : type)));
            button.setAttribute('data-tc-token', inline.getAttribute('data-tc-token') || inline.getAttribute('tc-token'));
            inline.getAttribute('data-tc-meta') && button.setAttribute('data-tc-meta', inline.getAttribute('data-tc-meta') || inline.getAttribute('tc-meta'));

            button.textContent = lang === 'en' ? 'Buy ticket' : 'ÐÑÐ¿Ð¸ÑÑ Ð±Ð¸Ð»ÐµÑ';
            button.type = 'button';
            if (inline.parentNode) inline.parentNode.style.textAlign = 'center';
            inline.replaceWith(button);
          });
        }
      });
    }

    // data-tc-lang="en"
    // Buy ticket

    placeholders = getTicketsCloudPlaceholders();

    _bindBuyTicketClickCallback();
    if (!isOrderSuccess && hasWidgetPlaceholders(placeholders)) {
      if (window.ticketscloudUTM) {
        return;
      }
      utm = new _utm2.default(_widgetConst.IFRAME_DOMAIN + '/' + _widgetConst.API_VERSION, document.referrer);
      window.ticketscloudUTM = true;
      utm.init(function () {
        return utmDispatchButtonAdded(placeholders.links);
      });

      _widgetVk2.default.initHeight();
    }

    stylesLink = dom.addButtonsStyles();
    initInlineIntegratedWidgets(placeholders);
    _widgetShowroom2.default.initInline(placeholders.showroomInline);

    if (isOrderSuccess) {
      dom.appendSuccessWidget(utm);
    } else {
      _widgetAnalytics2.default.init();
    }
    if (window.self !== window.top) {
      window.top.postMessage(JSON.stringify({ action: 'getDomain' }), '*');
    }
  }

  if (document.readyState === 'complete' || document.readyState === 'loaded') {
    init();
  } else {
    document.addEventListener('DOMContentLoaded', init);
  }

  window.addEventListener('resize', frameResizeCallback);
  window.addEventListener('message', messageCallback);
  window.addEventListener('orientationchange', resizeFrame);
  if (window.matchMedia('(orientation: portrait)').addListener) {
    window.matchMedia('(orientation: portrait)').addListener(resizeFrame);
  }

  window.ticketsCloudWidget = {
    destroy: function destroy() {
      document.getElementsByTagName('head')[0].removeChild(stylesLink);
      document.removeEventListener('DOMContentLoaded', init);
      window.removeEventListener('resize', frameResizeCallback);
      window.removeEventListener('message', messageCallback);
      window.removeEventListener('orientationchange', resizeFrame);
      if (window.matchMedia('(orientation: portrait)').addListener) {
        window.matchMedia('(orientation: portrait)').removeListener(resizeFrame);
      }
      document.querySelector('body').removeEventListener('click', showPopupClickHandler);
    },

    init: init
  };
})();

},{"./utm":7,"./widget-analytics":8,"./widget-const":9,"./widget-dom":10,"./widget-messages":11,"./widget-showroom":12,"./widget-tilda":13,"./widget-utils":14,"./widget-vk":15,"jwt-decode":3,"match-media":4,"ua-parser-js":5}],7:[function(require,module,exports){
'use strict';

/**
 * UTM object constructor.
 * @constructor
 * @param {string} baseURL - URL to send requests to.
 * @param {string} [referer] - Usually `document.referrer`.
 *  `document.referrer` contains two `r` in referrer. But referer without
 *  double `r` must be used in commucation with server.
 *  https://ru.wikipedia.org/wiki/HTTP_referer
 * @constructor
 */
function UTM(baseURL, referer) {
  baseURL = toCanonicalURL(baseURL);
  this.url = baseURL + '/resources/utm/sessions';
  this.referer = referer;
  this.location = window.location.toString();
  this._disabled = /utm=(false|no|off)/.test(window.location.href);
}

/**
 * Return canonical url.
 * @param {string} url
 * @return {string}
 */
function toCanonicalURL(url) {
  if (!url) return url;
  if (url.indexOf(':') !== -1) return url; // Contains protocol.

  if (url[0] !== '/') {
    url = '/' + url;
  }

  return getCurrentRoot() + url;

  function getCurrentRoot() {
    var protocol = window.location.protocol;
    var hostname = window.location.hostname;
    var port = window.location.port;
    return port ? protocol + '//' + hostname + ':' + port : protocol + '//' + hostname;
  }
}

/**
 * Disable requests processing.
 * Although success callbacks will be called.
 * @return {void}
 */
UTM.prototype.disable = function () {
  this._disabled = true;
};

/**
 * Initialize UTM. Must be called first after construction.
 * @param {string} [id] - UTM's id issued by server.
 * @param {function} [callback] - Success callback.
 */
UTM.prototype.init = function (id, callback) {
  if (typeof id === 'function') {
    callback = id;
    id = undefined;
  }

  callback = callback || noop;

  if (id) {
    this._setId(id);
    callback();
  } else {
    this._aquireId(callback);
  }
};

/**
 * Set UTM's id.
 * @param {string} id
 * @return {void}
 */
UTM.prototype._setId = function (id) {
  this.id = this.id || id;
};

/**
 * Aquire id from server.
 * @param {function} [callback] - Success callback.
 * @return {void}
 */
UTM.prototype._aquireId = function (callback) {
  var _this = this;
  var data = {
    url: this.location,
    referer: this.referer
  };
  this._post(data, function onAquireId(res) {
    if (res && res.id) _this._setId(res.id);
    callback();
  });
};

/**
 * Send request to server.
 * Disabled UTM executes callback always.
 * @param {object} data
 * @param {function} [callback] - Success callback.
 * @return {void}
 */
UTM.prototype._post = function (data, callback) {
  var xhr = new XMLHttpRequest();

  if (this._disabled) {
    callback(null);
    return;
  }

  xhr.open('POST', this._getUrl());
  xhr.setRequestHeader('Content-Type', 'application/json');
  setRequestCallback(xhr, callback);

  xhr.send(JSON.stringify(data));
};

/**
 * Return URL to send request to.
 * @return {string}
 */
UTM.prototype._getUrl = function () {
  if (!this.id) return this.url;
  return this.url + '/' + this.id + '/add_action';
};

/**
 * Set success callback for request.
 * @param {XMLHttpRequest} request
 * @param {function} [callback]
 * @return {void}
 */
function setRequestCallback(request, callback) {
  if (!callback) return;

  request.onload = function () {
    try {
      callback(JSON.parse(request.responseText));
    } catch (error) {
      if (window.console) {
        window.console.log('Failed to set UTM: ' + error.message);
      }
    }
  };
}

/**
 * User actions.
 * Constant. Defined by server.
 */
UTM.prototype.actions = {
  buttonAdded: 'button_added',
  widgetOpened: 'widget_opened',
  toCustomerAdding: 'to_customer_adding',
  toPaymentChoice: 'to_payment_choice',
  toInvoiceAdding: 'to_invoice_adding',
  toPayment: 'to_payment',
  widgetClose: 'widget_closed'
};

/**
 * Dispatch user action to server.
 * @param {string} action
 * @param {(object|object[])} data - Data to dispatch with action.
 * @param {function} [callback] - Success callback.
 * @return {void}
 */
UTM.prototype.dispatch = function (action, data, callback) {
  var transform;
  var transformed;

  callback = callback || noop;

  if (!this.id) {
    callback();
    return;
  }

  if (!Array.isArray(data)) {
    data = [data];
  }

  transform = createDataTransformer(action);
  transformed = data.map(transform);

  this._post(transformed, callback);
};

function createDataTransformer(action) {
  return function toActionData(data) {
    return { action: action, data: data };
  };
}

function noop() {}

module.exports = UTM;

},{}],8:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _widgetUtils = require('./widget-utils');

var googleAnalyticsLinker = void 0;

var init = function init() {
  if (!window.ga) {
    return;
  }
  window.ga('require', 'linker');
  window.ga(function (tracker) {
    // googleClientId = tracker.get('clientId');
    if (tracker) {
      googleAnalyticsLinker = new window.gaplugins.Linker(tracker);
    }
  });
};

var decorateLink = function decorateLink(src) {
  var gacid = (0, _widgetUtils.getUrlParameter)('_ga');
  if ((0, _widgetUtils.isWidgetShowroom)() && gacid) {
    return src + '&_ga=' + gacid;
  }
  return googleAnalyticsLinker ? googleAnalyticsLinker.decorate(src) : src;
};

exports.default = { init: init, decorateLink: decorateLink };

},{"./widget-utils":14}],9:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var IFRAME_DOMAIN = exports.IFRAME_DOMAIN = window.ticketscloud_url ? window.ticketscloud_url.replace(/\/$/, '') : 'https://api.ticketscloud.org';
var API_VERSION = exports.API_VERSION = 'v1';
var FRAME_WIDTH = exports.FRAME_WIDTH = 780;
var OVERLAY_ID = exports.OVERLAY_ID = 'tc-widget-overlay';
var WIDGET_TYPE_INLINE = exports.WIDGET_TYPE_INLINE = 'inline';
var WIDGET_TYPE_MOBILE = exports.WIDGET_TYPE_MOBILE = 'mobile';
var WIDGET_TYPE_INTEGRATED = exports.WIDGET_TYPE_INTEGRATED = 'integrated';

},{}],10:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.positionWidget = exports.disableGlobalScroll = exports.removeEventPopupWidget = exports.appendSuccessWidget = exports.appendWidget = exports.appendInlineWidget = exports.showroomInsertStyles = exports.addButtonsStyles = exports.generateSaleIFrameUrl = undefined;

var _jwtDecode = require('jwt-decode');

var _jwtDecode2 = _interopRequireDefault(_jwtDecode);

var _widgetUtils = require('./widget-utils');

var _widgetConst = require('./widget-const');

var _widgetMessages = require('./widget-messages');

var _widgetMessages2 = _interopRequireDefault(_widgetMessages);

var _widgetAnalytics = require('./widget-analytics');

var _widgetAnalytics2 = _interopRequireDefault(_widgetAnalytics);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var noop = function noop() {};
var HOME_SITE_RE = /^https?:\/\/((local|dev|stage)\.)?ticketscloud\.org/;
var DISABLE_UTM = HOME_SITE_RE.test(window.location.href);

var generateOverlay = function generateOverlay(id) {
  var clickCallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;

  var overlay = document.getElementById(id);
  if (!overlay) {
    overlay = document.createElement('div');
    overlay.setAttribute('id', id);
    var oStyles = overlay.style;
    oStyles.position = 'fixed';
    oStyles.top = 0;
    oStyles.left = 0;
    oStyles.height = '100%';
    oStyles.width = '100%';
    oStyles.zIndex = '10003';
    oStyles.background = 'rgba(0,0,0,.5)';
    overlay.addEventListener('click', function (evt) {
      evt.preventDefault();
      clickCallback(evt);
    });
  }

  return overlay;
};

var generateSpinner = function generateSpinner() {
  var html = '\n    <div class="ticketscloud-spin">\n      <div class="ticketscloud-spin__child"></div>\n      <div class="ticketscloud-spin__child"></div>\n    </div>';
  var element = document.createRange().createContextualFragment(html);
  var style = document.createElement('style');
  style.type = 'text/css';
  var css = '\n    .ticketscloud-spin {\n      width: 40px;\n      height: 40px;\n      position: relative;\n      margin: 40px auto;\n    }\n    .ticketscloud-spin__child {\n      width: 100%;\n      height: 100%;\n      border-radius: 50%;\n      background-color: #333;\n      opacity: 0.6;\n      position: absolute;\n      top: 0;\n      left: 0;\n      -webkit-animation: sk-doubleBounce 2s infinite ease-in-out;\n              animation: sk-doubleBounce 2s infinite ease-in-out;\n    }\n    .ticketscloud-spin__child:last-child {\n      -webkit-animation-delay: -1.0s;\n              animation-delay: -1.0s;\n    }\n    @-webkit-keyframes sk-doubleBounce {\n      0%, 100% {\n        -webkit-transform: scale(0);\n                transform: scale(0);\n      }\n      50% {\n        -webkit-transform: scale(1);\n                transform: scale(1);\n      }\n    }\n    @keyframes sk-doubleBounce {\n      0%, 100% {\n        -webkit-transform: scale(0);\n                transform: scale(0);\n      }\n      50% {\n        -webkit-transform: scale(1);\n                transform: scale(1);\n      }\n    }';
  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
  style.setAttribute('id', 'ticketscloud-loader');
  document.querySelector('head').appendChild(style);
  return element;
};

var positionWidget = function positionWidget(params) {
  var container = params.container;
  if (!(0, _widgetUtils.isPopupWidgetContainer)(container)) return;

  var fullScreen = params.fullScreen;
  var windowHeight = window.innerHeight;
  var cStyles = container.style;
  var widgetWidth = (0, _widgetUtils.calcWidgetWidth)();
  var WIDGET_GAP = (0, _widgetUtils.isMobile)() || (0, _widgetUtils.isWidgetShowroom)() ? 0 : 20;

  if (fullScreen) {
    cStyles.width = 'auto';
    cStyles.left = WIDGET_GAP + 'px';
    cStyles.right = WIDGET_GAP + 'px';
    cStyles.marginLeft = 0;
  } else {
    cStyles.width = widgetWidth + 'px';
    cStyles.left = '50%';
    cStyles.marginLeft = -widgetWidth / 2 + 'px';
  }

  cStyles.position = 'fixed';
  cStyles.overflowY = 'auto';
  cStyles.fontSize = '0';
  cStyles.WebkitOverflowScrolling = 'touch';
  cStyles.top = WIDGET_GAP + 'px';
  if (!(0, _widgetUtils.isWidgetShowroom)()) {
    var containerHeight = windowHeight - 2 * WIDGET_GAP;
    if (params.height && containerHeight > params.height) {
      cStyles.height = params.height + 'px';
      cStyles.bottom = 'auto';
    } else {
      cStyles.height = 'auto';
      cStyles.bottom = WIDGET_GAP + 'px';
    }

    cStyles.background = 'white';
  }
  if ((0, _widgetUtils.isWidgetShowroom)() && !params.topDomain) {
    cStyles.bottom = WIDGET_GAP + 'px';
  }
};

var generateContainer = function generateContainer() {
  var container = document.createElement('div');
  var cStyles = container.style;
  container.appendChild(generateSpinner());
  positionWidget({ container: container });

  cStyles.background = 'transparent';
  cStyles.zIndex = '111111';
  return container;
};

var generateIFrameHtml = function generateIFrameHtml(params) {
  var klass = params.frameType ? 'tc-widget-' + params.frameType : 'tc-widget-frame_popup';
  return '<iframe frameborder="0" style="margin: 0;" width="100%" height="100%"\n    name="tc-frame-' + params.id + '" src="' + params.src + '" scrolling="auto" class="' + klass + '" allowpaymentrequest></iframe>';
};

var generateSaleIFrameUrl = function generateSaleIFrameUrl(params, utm) {
  var iFrameSrc = void 0;
  var firstName = window.ticketscloud_first_name || '';
  var lastName = window.ticketscloud_last_name || '';
  var email = window.ticketscloud_email || '';
  var phone = window.ticketscloud_phone || '';
  var tokenContent = (0, _jwtDecode2.default)(params.token);
  var partner = tokenContent.p || tokenContent.partner;
  var roistat = (0, _widgetUtils.getCookie)('roistat_visit');

  if (params.lang === null || params.lang === 'null') {
    params.lang = '';
  }

  if (DISABLE_UTM) {
    params.utm = 'off';
  } else if (utm && utm.id) {
    params.utm = utm.id;
  }

  var route = params.meta === 'true' ? '/meta?meta_event' : '?event';

  iFrameSrc = _widgetConst.IFRAME_DOMAIN + '/' + _widgetConst.API_VERSION + '/widgets/common' + route + '=' + params.event;
  iFrameSrc += '&token=' + params.token;
  iFrameSrc += '&partner=' + partner;
  iFrameSrc += firstName ? '&first_name=' + encodeURIComponent(firstName) : '';
  iFrameSrc += lastName ? '&last_name=' + encodeURIComponent(lastName) : '';
  iFrameSrc += email ? '&email=' + encodeURIComponent(email) : '';
  iFrameSrc += phone ? '&phone=' + encodeURIComponent(phone) : '';
  iFrameSrc += params.frameType ? '&m=' + params.frameType : '';
  iFrameSrc += params.lang ? '&lang=' + params.lang : '';
  iFrameSrc += params.theme ? '&theme=' + params.theme : '';
  iFrameSrc += params.promo ? '&promo=' + params.promo : '';
  iFrameSrc += params.utm ? '&utm=' + params.utm : '';
  iFrameSrc += roistat ? '&roistat=' + roistat : '';

  iFrameSrc = _widgetAnalytics2.default.decorateLink(iFrameSrc);
  return iFrameSrc;
};

/**
 * adds <link> tag with widget buttons css
 */
var addButtonsStyles = function addButtonsStyles() {
  var filename = 'tc-widget-button.css';
  var stylesLink = document.createElement('link');
  stylesLink.setAttribute('href', _widgetConst.IFRAME_DOMAIN + '/static/styles/' + filename);
  stylesLink.setAttribute('rel', 'stylesheet');
  document.getElementsByTagName('head')[0].appendChild(stylesLink);
  return stylesLink;
};

var showroomInsertStyles = function showroomInsertStyles() {
  var styleLink = document.createElement('link');
  var domain = (0, _widgetUtils.getTicketsCloudDomain)();
  var filename = 'widget.css';
  styleLink.type = 'text/css';
  styleLink.rel = 'stylesheet';
  styleLink.href = window.location.protocol + '//sr.' + domain + '/static/' + filename;
  document.querySelector('head').appendChild(styleLink);
};

function appendInlineWidget(element, frameType, utm) {
  var widgetParams = (0, _widgetUtils.getWidgetParams)(element);
  if (widgetParams.event && widgetParams.token) {
    var iFrameContainer = document.createElement('div');
    widgetParams.frameType = frameType;
    var iFrameSrc = generateSaleIFrameUrl(widgetParams, utm);
    var iFrameHTML = generateIFrameHtml({ src: iFrameSrc, id: widgetParams.event, frameType: frameType });
    iFrameContainer.className = iFrameContainer.className + ' tc-widget-' + frameType + '-box';
    iFrameContainer.innerHTML = iFrameHTML;
    element.parentNode.replaceChild(iFrameContainer, element);
  } else {
    (0, _widgetUtils.logError)(widgetParams);
  }
}

function appendWidget(iFrameSrc, widgetId) {
  document.body.appendChild(generateOverlay(_widgetConst.OVERLAY_ID));
  var iFrameContainer = generateContainer();
  // XXX Do not insert iframe html into element before the element is in DOM.
  // In IE(9) it causes SCRIPT5009 error - global JS objects (e.g. Math, Date)
  // are not defined.
  // http://stackoverflow.com/a/9529216/1838424
  document.body.appendChild(iFrameContainer);
  iFrameContainer.innerHTML = generateIFrameHtml({ src: iFrameSrc, id: widgetId });
}

function appendSuccessWidget() {
  var orderNumber = (0, _widgetUtils.getUrlParameter)('tc_order_success');
  var event = (0, _widgetUtils.getUrlParameter)('tc_event');
  var partner = (0, _widgetUtils.getUrlParameter)('tc_partner');

  var iFrameSrc = _widgetConst.IFRAME_DOMAIN + '/' + _widgetConst.API_VERSION + '/widgets/common_success?';

  iFrameSrc += 'order=' + orderNumber;
  iFrameSrc += event ? 'event=' + event : '';
  iFrameSrc += partner ? 'partner=' + partner : '';

  appendWidget(iFrameSrc, orderNumber);
}

function removePreloaderStyle() {
  var style = document.querySelector('#ticketscloud-loader');
  if (style) {
    style.parentNode.removeChild(style);
  }
}

function removeEventPopupWidget(event) {
  var iFrame = event ? document.querySelectorAll('[name="tc-frame-' + event + '"]') : document.querySelectorAll('.tc-widget-frame_popup');
  var overlay = document.getElementById(_widgetConst.OVERLAY_ID);

  Array.prototype.forEach.call(iFrame, removeOrReloadiFrame);

  if (overlay && overlay.parentNode) {
    overlay.parentNode.removeChild(overlay);
  }

  removePreloaderStyle();
  resetGlobalScroll();
  if ((0, _widgetUtils.isWidgetShowroom)()) {
    var selfHeight = window.innerHeight;
    _widgetMessages2.default.sendHeight(selfHeight);
  }
}

function removeOrReloadiFrame(frame) {
  var container = frame.parentNode;
  if (container && container.parentNode && (0, _widgetUtils.isPopupWidgetContainer)(container)) {
    container.parentNode.removeChild(container);
  } else {
    frame.setAttribute('src', frame.getAttribute('src'));
  }
}

function disableGlobalScroll() {
  var body = document.getElementsByTagName('body')[0];
  body.setAttribute('data-overflow', body.style.overflow);
  body.style.overflow = 'hidden';
}

function resetGlobalScroll() {
  var body = document.getElementsByTagName('body')[0];
  body.style.overflow = body.getAttribute('data-overflow');
  delete body.removeAttribute('data-overflow');
}

exports.generateSaleIFrameUrl = generateSaleIFrameUrl;
exports.addButtonsStyles = addButtonsStyles;
exports.showroomInsertStyles = showroomInsertStyles;
exports.appendInlineWidget = appendInlineWidget;
exports.appendWidget = appendWidget;
exports.appendSuccessWidget = appendSuccessWidget;
exports.removeEventPopupWidget = removeEventPopupWidget;
exports.disableGlobalScroll = disableGlobalScroll;
exports.positionWidget = positionWidget;

},{"./widget-analytics":8,"./widget-const":9,"./widget-messages":11,"./widget-utils":14,"jwt-decode":3}],11:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var sendHeight = function sendHeight(height) {
  if (window === parent) {
    return;
  }
  var payload = { action: 'setHeight', fromShowroom: true };
  if (height) {
    payload.height = height;
  }
  window.parent.postMessage(JSON.stringify(payload), '*');
};

var sendCancelOrder = function sendCancelOrder() {
  var msg = JSON.stringify({ action: 'tcCancelOrder' });
  document.getElementsByClassName('tc-widget-frame_popup')[0].contentWindow.postMessage(msg, '*');
};

var parseData = function parseData(json) {
  var data = void 0;
  try {
    data = JSON.parse(json);
  } catch (error) {
    if (window.console) {
      /* eslint-disable */
      console.log('JSON parse failed', error, json);
      /* eslint-enable */
    }
  }
  return data;
};

exports.default = { sendHeight: sendHeight, sendCancelOrder: sendCancelOrder, parseData: parseData };

},{}],12:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _jwtDecode = require('jwt-decode');

var _jwtDecode2 = _interopRequireDefault(_jwtDecode);

var _widgetUtils = require('./widget-utils');

var _widgetConst = require('./widget-const');

var _widgetDom = require('./widget-dom');

var dom = _interopRequireWildcard(_widgetDom);

var _widgetAnalytics = require('./widget-analytics');

var _widgetAnalytics2 = _interopRequireDefault(_widgetAnalytics);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function initInline(placeholders) {
  Array.prototype.forEach.call(placeholders, createInline);
}

function createInline(placeholder) {
  var params = (0, _widgetUtils.getWidgetParams)(placeholder);
  var tokenObj = (0, _jwtDecode2.default)(params.token);
  params.partner = tokenObj.partner || tokenObj.p;
  var url = getShowroomInlineWidgetUrl(params.partner);
  (0, _widgetUtils.fetchFileContent)(url, insertContent(placeholder));
}

function insertContent(placeholder) {
  return function (html) {
    var domain = (0, _widgetUtils.getTicketsCloudDomain)();
    var protocol = window.location.protocol;
    var host = protocol + '//sr.' + domain;
    var filename = 'widget.css';
    html.replace(/href="\/static\//g, 'href="' + host + '/static/');
    html.replace(/src="\/media\//g, 'src="' + host + '/media/');

    var styleUrl = 'https://sr.' + domain + '/static/' + filename;

    if (placeholder.createShadowRoot) {
      (0, _widgetUtils.fetchFileContent)(styleUrl, function (style) {
        placeholder.createShadowRoot().innerHTML = '<style>' + style + '</style>' + html;
      });
    } else {
      dom.showroomInsertStyles();
      placeholder.innerHTML = html;
    }
  };
}

function getShowroomWidgetUrl(partner) {
  var domain = (0, _widgetUtils.getTicketsCloudDomain)();
  var protocol = /api/.test(_widgetConst.IFRAME_DOMAIN) ? 'https:' : window.location.protocol;
  return protocol + '//sr.' + domain + '?partner_id=' + partner;
}

function getShowroomInlineWidgetUrl(partner) {
  return _widgetAnalytics2.default.decorateLink(getShowroomWidgetUrl(partner) + '&widget');
}

function getIFrameUrl(partner) {
  return _widgetAnalytics2.default.decorateLink(getShowroomWidgetUrl(partner) + '&embedded&popup=true');
}

function isTrigger(element) {
  return element.getAttribute('data-tc-showroom') !== null;
}

exports.default = { initInline: initInline, getIFrameUrl: getIFrameUrl, isTrigger: isTrigger };

},{"./widget-analytics":8,"./widget-const":9,"./widget-dom":10,"./widget-utils":14,"jwt-decode":3}],13:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var getParamsFromURL = function getParamsFromURL(href) {
  return href.match(/#ticketscloud:(.+)/)[1].split('&').reduce(function (acc, param) {
    acc[param.split('=')[0]] = param.split('=')[1];
    return acc;
  }, {});
};

var addAttributes = function addAttributes(link) {
  var href = link.getAttribute('href');
  var params = getParamsFromURL(href);
  if ((params.showroom || params.event) && params.token) {
    link.setAttribute('data-tc-token', params.token);
    if (params.event) {
      link.setAttribute('data-tc-event', params.event);
    }
    if (params.showroom) {
      link.setAttribute('data-tc-showroom', true);
    }
    if (params.lang) {
      link.setAttribute('data-tc-lang', params.lang);
    }
  }
};

var init = function init() {
  var isTilda = Boolean(document.querySelector('[data-tilda-project-id]'));
  if (!isTilda) {
    return;
  }

  var links = document.querySelectorAll('a[href^="#ticketscloud:"]');
  Array.prototype.forEach.call(links, addAttributes);
};

exports.default = { init: init };

},{}],14:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getTicketsCloudDomain = exports.getWidgetParams = exports.getEventId = exports.getCookie = exports.calcWidgetWidth = exports.isMobile = exports.isPopupWidgetContainer = exports.isWidgetShowroom = exports.isShowroom = exports.fetchFileContent = exports.getUrlParameter = exports.logError = exports.toKebab = undefined;

var _widgetConst = require('./widget-const');

var createCORSRequest = function createCORSRequest(method, url) {
  var xhr = new XMLHttpRequest();
  if ('withCredentials' in xhr) {
    xhr.open(method, url, true);
  } else if (typeof XDomainRequest !== 'undefined') {
    xhr = new XDomainRequest();
    xhr.open(method, url);
  } else {
    xhr = null;
  }
  return xhr;
};

var toKebab = exports.toKebab = function toKebab(str) {
  return str.replace(/([A-Z])/g, function (sub) {
    return '-' + sub.toLowerCase();
  });
};

var logError = exports.logError = function logError(params) {
  /* eslint-disable */
  if (console && console.log && !params.token) {
    console.log('No Tickets Cloud token found for ' + params.event);
  }
  /* eslint-enable */
};

var getUrlParameter = exports.getUrlParameter = function getUrlParameter(name) {
  var clean = name.replace(/[[]/, '\\[').replace(/[\]]/, '\\]');
  var regex = new RegExp('[\\?&]' + clean + '=([^&#]*)');
  var results = regex.exec(location.search);
  return results === null ? null : decodeURIComponent(results[1].replace(/\+/g, ' '));
};

var fetchFileContent = exports.fetchFileContent = function fetchFileContent(url, callback) {
  var request = createCORSRequest('GET', url);

  if (!request) {
    throw new Error('CORS not supported');
  }

  request.onload = function () {
    if (request.status >= 200 && request.status < 400) {
      callback(request.responseText);
    } else {
      throw new Error('Server error: ' + request.status);
    }
  };

  request.send();
};

var showroomRegex = /https?:\/\/sr\.((stage|dev|local)\.)?ticketscloud\.org/;
var isShowroom = exports.isShowroom = function isShowroom() {
  return showroomRegex.test(window.location.toString());
};

var isWidgetShowroom = exports.isWidgetShowroom = function isWidgetShowroom() {
  return window.self !== window.top && isShowroom();
};

var isPopupWidgetContainer = exports.isPopupWidgetContainer = function isPopupWidgetContainer(container) {
  return !(/tc-widget-inline-box/.test(container.className) || /tc-widget-integrated-box/.test(container.className) || /tc-widget-mobile-box/.test(container.className));
};

var isMobile = exports.isMobile = function isMobile() {
  return window.innerWidth < 570;
};

var calcWidgetWidth = exports.calcWidgetWidth = function calcWidgetWidth() {
  var windowWidth = document.getElementsByTagName('body')[0].offsetWidth;
  if (windowWidth > _widgetConst.FRAME_WIDTH) {
    return _widgetConst.FRAME_WIDTH;
  }
  return windowWidth;
};

var getCookie = exports.getCookie = function getCookie(name) {
  var clean = name.replace(/([.$?*|{}()[\]\\/+^])/g, '\\$1');
  var matches = document.cookie.match(new RegExp('(?:^|; )' + clean + '=([^;]*)'));
  return matches ? decodeURIComponent(matches[1]) : undefined;
};

var getEventId = exports.getEventId = function getEventId(element) {
  return element.getAttribute('data-tc-event') || element.getAttribute('tc-event') || element.getAttribute('data-tc-event-inline') || element.getAttribute('tc-event-inline') || element.getAttribute('data-tc-event-integrated') || element.getAttribute('tc-event-integrated');
};

var getWidgetParams = exports.getWidgetParams = function getWidgetParams(element) {
  var event = getEventId(element);
  var optionalParams = ['theme', 'promo', 'partner', 'meta'];
  var params = {
    token: element.getAttribute('data-tc-token') || element.getAttribute('tc-token') || window.ticketscloudid,
    lang: element.getAttribute('data-tc-lang')
  };

  if (event) {
    params.event = event;
  }

  optionalParams.forEach(function (param) {
    var value = element.getAttribute('data-tc-' + param);
    if (value) params[param] = value;
  });
  return params;
};

var getTicketsCloudDomain = exports.getTicketsCloudDomain = function getTicketsCloudDomain() {
  return (/https:\/\/api\./.test(_widgetConst.IFRAME_DOMAIN) ? 'ticketscloud.org' : _widgetConst.IFRAME_DOMAIN.replace(/https?:\/\//, '')
  );
};

},{"./widget-const":9}],15:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _widgetUtils = require('./widget-utils');

var setHeight = function setHeight(height) {
  var heightWithGap = height + ((0, _widgetUtils.isMobile)() ? 0 : 40);
  if (height > window.innerHeight && window.VK && window.VK.callMethod) {
    var width = document.querySelector('body').clientWidth;
    window.VK.callMethod('resizeWindow', width, heightWithGap);
  }
};

var initHeight = function initHeight() {
  if (window.VK && window.VK.callMethod) {
    var bodyBoundings = document.querySelector('body').getBoundingClientRect().height;
    window.VK.callMethod('resizeWindow', bodyBoundings.width, bodyBoundings.height);
  }
};

var setRetarget = function setRetarget(hashes) {
  hashes.forEach(function (hash) {
    document.createElement('img').src = window.location.protocol + '//vk.com/rtrg?r=' + hash;
  });
};

var scrollTop = function scrollTop() {
  if (window.VK && window.VK.callMethod) {
    window.VK.callMethod('scrollWindow', 0);
  }
};

exports.default = { setHeight: setHeight, initHeight: initHeight, setRetarget: setRetarget, scrollTop: scrollTop };

},{"./widget-utils":14}]},{},[6])

//# sourceMappingURL=tcwidget.js.map
